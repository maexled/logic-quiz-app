// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0

package database

import (
	"context"

	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	AddQuizQuestion(ctx context.Context, arg AddQuizQuestionParams) (UserQuizQuestion, error)
	AddQuizRun(ctx context.Context, userID pgtype.Int8) (UserQuizRun, error)
	CreateQuestion(ctx context.Context, arg CreateQuestionParams) (Question, error)
	CreateUser(ctx context.Context, arg CreateUserParams) (User, error)
	DeleteQuestion(ctx context.Context, id int64) error
	DeleteUser(ctx context.Context, id int64) error
	GetAllQuizRuns(ctx context.Context) ([]UserQuizRun, error)
	GetAmountQuizRunsPerDaySinceDate(ctx context.Context, createdAt pgtype.Timestamptz) ([]GetAmountQuizRunsPerDaySinceDateRow, error)
	GetMostDifficultQuestions(ctx context.Context, limit int32) ([]GetMostDifficultQuestionsRow, error)
	GetMostEasiestQuestions(ctx context.Context, limit int32) ([]GetMostEasiestQuestionsRow, error)
	GetQuizQuestions(ctx context.Context, userQuizRunID pgtype.Int8) ([]UserQuizQuestion, error)
	GetQuizQuestionsWhereIDIsIn(ctx context.Context, dollar_1 []int32) ([]UserQuizQuestion, error)
	GetQuizRuns(ctx context.Context, userID pgtype.Int8) ([]UserQuizRun, error)
	GetQuizRunsRatioAndTimeSinceDateFromUser(ctx context.Context, arg GetQuizRunsRatioAndTimeSinceDateFromUserParams) ([]GetQuizRunsRatioAndTimeSinceDateFromUserRow, error)
	GetQuizRunsSinceDate(ctx context.Context, createdAt pgtype.Timestamptz) ([]UserQuizRun, error)
	GetQuizRunsWithLimit(ctx context.Context, arg GetQuizRunsWithLimitParams) ([]UserQuizRun, error)
	GetUser(ctx context.Context, id int64) (User, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	GetUserByUsername(ctx context.Context, username string) (User, error)
	GetUserQuizRunRanking(ctx context.Context, limit int32) ([]GetUserQuizRunRankingRow, error)
	ListQuestions(ctx context.Context) ([]Question, error)
	ListQuestionsRandomWithLimit(ctx context.Context, limit int32) ([]Question, error)
	ListUsers(ctx context.Context) ([]User, error)
	UpdateCredentials(ctx context.Context, arg UpdateCredentialsParams) error
}

var _ Querier = (*Queries)(nil)
